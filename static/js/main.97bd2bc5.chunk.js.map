{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["API_URL","TodoList","state","searchingText","todos","filterByKey","hundleChange","event","setState","target","value","hundleChangeTypeOfFilter","preventDefault","filterCompletedTasks","filter","todo","completed","searchTodo","textToLowerCase","toLowerCase","title","includes","a","fetch","then","response","ok","Error","json","data","this","selectedUser","props","filteredTodo","className","type","onChange","placeholder","map","classNames","readOnly","checked","onClick","userId","id","React","Component","CurrentUser","user","getCurrentUser","prevProps","name","email","phone","clear","App","selectedUserId","hendleUserSelection","clearCurrentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97bd2bc5.chunk.js","sourcesContent":["const API_URL = 'https://mate.academy/students-api';\n\nexport const loadTodos = () => {\n  return fetch(`${API_URL}/todos`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('error');\n      }\n\n      return response.json();\n    });\n};\n\nexport const getUser = (userId: number) => {\n  return fetch(`${API_URL}/users/${userId}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('error');\n      }\n\n      return response.json();\n    });\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { loadTodos } from '../../api/api';\nimport './TodoList.scss';\n\ntype Props = {\n  selectedUser:((userId: number) => void),\n};\n\ntype State = {\n  searchingText: string,\n  todos: Todo[],\n  filterByKey: string,\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state:State = {\n    searchingText: '',\n    todos: [],\n    filterByKey: 'all',\n  };\n\n  async componentDidMount() {\n    const data = await loadTodos();\n\n    this.setState({\n      todos: [...data],\n    });\n  }\n\n  hundleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      searchingText: event.target.value,\n    });\n  };\n\n  hundleChangeTypeOfFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault();\n\n    this.setState({ filterByKey: event.target.value });\n  };\n\n  filterCompletedTasks = (todos: Todo[]) => (\n    todos.filter(todo => {\n      switch (this.state.filterByKey) {\n        case 'active':\n          return todo.completed === false;\n        case 'completed':\n          return todo.completed === true;\n        case 'all':\n        default:\n          return todo;\n      }\n    })\n  );\n\n  searchTodo = () => {\n    const { searchingText, todos } = this.state;\n    const textToLowerCase = searchingText.toLowerCase();\n\n    const filtredTodos = this.filterCompletedTasks(todos);\n\n    return (\n      filtredTodos.filter(todo => {\n        return (todo.title.toLowerCase().includes(textToLowerCase));\n      })\n    );\n  };\n\n  render() {\n    const { selectedUser } = this.props;\n    const { searchingText, filterByKey } = this.state;\n\n    const filteredTodo = this.searchTodo();\n\n    return (\n      <div className=\"TodoList\">\n\n        <div className=\"TodoList__searchContainer\">\n          <input\n            type=\"text\"\n            className=\"TodoList__search\"\n            value={searchingText}\n            onChange={this.hundleChange}\n            placeholder=\"Search by title\"\n          />\n\n          <div className=\"TodoList__select\">\n            <p>Completed</p>\n            <select\n              value={filterByKey}\n              onChange={this.hundleChangeTypeOfFilter}\n            >\n              <option value=\"all\">\n                All\n              </option>\n\n              <option value=\"active\">\n                Active\n              </option>\n\n              <option value=\"completed\">\n                Completed\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodo.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !todo.completed,\n                    'TodoList__item--checked': todo.completed,\n                  },\n                )}\n\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n                  type=\"button\"\n                  onClick={() => {\n                    selectedUser(todo.userId);\n                  }}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\ninterface Props {\n  userId: number;\n  clear: () => void;\n}\n\ninterface State {\n  user: User | null,\n}\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  async componentDidMount() {\n    this.getCurrentUser();\n  }\n\n  async componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.getCurrentUser();\n    }\n  }\n\n  async getCurrentUser() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return (\n        <div>User not found</div>\n      );\n    }\n\n    return (\n      <>\n        {user && (\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                Selected user:\n                {user.id}\n              </span>\n            </h2>\n\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n            <button\n              className=\"\n                CurrentUser__button\n                button\n              \"\n              type=\"button\"\n              onClick={this.props.clear}\n            >\n              Clear\n            </button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  hendleUserSelection = (userId: number) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  clearCurrentUser = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            selectedUser={this.hendleUserSelection}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clear={this.clearCurrentUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}